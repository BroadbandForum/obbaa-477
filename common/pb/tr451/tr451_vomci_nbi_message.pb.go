// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: tr451_vomci_nbi_message.proto

//********************************************************************
// TR-451 vOMCI NBI Message Protocol Buffer Schema
//
//  Copyright (c) 2021, Broadband Forum
//
//  Redistribution and use in source and binary forms, with or
//   without modification, are permitted provided that the following
//   conditions are met:
//
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//
//   2. Redistributions in binary form must reproduce the above
//      copyright notice, this list of conditions and the following
//      disclaimer in the documentation and/or other materials
//      provided with the distribution.
//
//   3. Neither the name of the copyright holder nor the names of its
//      contributors may be used to endorse or promote products
//      derived from this software without specific prior written
//      permission.
//
//   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
//   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
//   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
//   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
//   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
//   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//   The above license is used as a license under copyright only.
//   Please reference the Forum IPR Policy for patent licensing terms
//   <https://www.broadband-forum.org/ipr-policy>.
//
//   Any moral rights which are necessary to exercise under the above
//   license grant are also deemed granted under this license.
//
// | Version           | Name                   | Date       |
// | TR-451 1.0.0      | vOMCI Specification    | TBD, 2021  |
//
// BBF software release registry: http://www.broadband-forum.org/software
//********************************************************************

package tr451

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Header_OBJECT_TYPE int32

const (
	Header_ONU                 Header_OBJECT_TYPE = 0
	Header_VOMCI_FUNCTION      Header_OBJECT_TYPE = 1
	Header_VOMCI_PROXY         Header_OBJECT_TYPE = 2
	Header_VOLTMF              Header_OBJECT_TYPE = 3
	Header_VOMCI_FUNCTION_TYPE Header_OBJECT_TYPE = 4 //Category of vOMCI function instances
)

// Enum value maps for Header_OBJECT_TYPE.
var (
	Header_OBJECT_TYPE_name = map[int32]string{
		0: "ONU",
		1: "VOMCI_FUNCTION",
		2: "VOMCI_PROXY",
		3: "VOLTMF",
		4: "VOMCI_FUNCTION_TYPE",
	}
	Header_OBJECT_TYPE_value = map[string]int32{
		"ONU":                 0,
		"VOMCI_FUNCTION":      1,
		"VOMCI_PROXY":         2,
		"VOLTMF":              3,
		"VOMCI_FUNCTION_TYPE": 4,
	}
)

func (x Header_OBJECT_TYPE) Enum() *Header_OBJECT_TYPE {
	p := new(Header_OBJECT_TYPE)
	*p = x
	return p
}

func (x Header_OBJECT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Header_OBJECT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_tr451_vomci_nbi_message_proto_enumTypes[0].Descriptor()
}

func (Header_OBJECT_TYPE) Type() protoreflect.EnumType {
	return &file_tr451_vomci_nbi_message_proto_enumTypes[0]
}

func (x Header_OBJECT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Header_OBJECT_TYPE.Descriptor instead.
func (Header_OBJECT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{1, 0}
}

type NFInformation_NFCapability int32

const (
	NFInformation_NO_CAPABILITY_REPORTED     NFInformation_NFCapability = 0
	NFInformation_ONU_STATE_ONLY_SUPPORT     NFInformation_NFCapability = 1
	NFInformation_ONU_CONFIG_REPLICA_SUPPORT NFInformation_NFCapability = 2
)

// Enum value maps for NFInformation_NFCapability.
var (
	NFInformation_NFCapability_name = map[int32]string{
		0: "NO_CAPABILITY_REPORTED",
		1: "ONU_STATE_ONLY_SUPPORT",
		2: "ONU_CONFIG_REPLICA_SUPPORT",
	}
	NFInformation_NFCapability_value = map[string]int32{
		"NO_CAPABILITY_REPORTED":     0,
		"ONU_STATE_ONLY_SUPPORT":     1,
		"ONU_CONFIG_REPLICA_SUPPORT": 2,
	}
)

func (x NFInformation_NFCapability) Enum() *NFInformation_NFCapability {
	p := new(NFInformation_NFCapability)
	*p = x
	return p
}

func (x NFInformation_NFCapability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NFInformation_NFCapability) Descriptor() protoreflect.EnumDescriptor {
	return file_tr451_vomci_nbi_message_proto_enumTypes[1].Descriptor()
}

func (NFInformation_NFCapability) Type() protoreflect.EnumType {
	return &file_tr451_vomci_nbi_message_proto_enumTypes[1]
}

func (x NFInformation_NFCapability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NFInformation_NFCapability.Descriptor instead.
func (NFInformation_NFCapability) EnumDescriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{6, 0}
}

type Status_StatusCode int32

const (
	Status_OK            Status_StatusCode = 0
	Status_ERROR_GENERAL Status_StatusCode = 1
)

// Enum value maps for Status_StatusCode.
var (
	Status_StatusCode_name = map[int32]string{
		0: "OK",
		1: "ERROR_GENERAL",
	}
	Status_StatusCode_value = map[string]int32{
		"OK":            0,
		"ERROR_GENERAL": 1,
	}
)

func (x Status_StatusCode) Enum() *Status_StatusCode {
	p := new(Status_StatusCode)
	*p = x
	return p
}

func (x Status_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_tr451_vomci_nbi_message_proto_enumTypes[2].Descriptor()
}

func (Status_StatusCode) Type() protoreflect.EnumType {
	return &file_tr451_vomci_nbi_message_proto_enumTypes[2]
}

func (x Status_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_StatusCode.Descriptor instead.
func (Status_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{22, 0}
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{0}
}

func (x *Msg) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Msg) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId string `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // Message identifier to
	// 1) Identify requests and notifications
	// 2) Correlate requests and response
	SenderName string `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"` // Unique name of the entity that
	// originated the message
	RecipientName string `protobuf:"bytes,3,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"` // The name of the entity that is to
	// receive the request
	ObjectType Header_OBJECT_TYPE `protobuf:"varint,4,opt,name=object_type,json=objectType,proto3,enum=tr451_vomci_nbi_message.v1.Header_OBJECT_TYPE" json:"object_type,omitempty"` // The type of the object or
	// resource that is subject of the message
	ObjectName string `protobuf:"bytes,5,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"` // The  name of the object or resource
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Header) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Header) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *Header) GetObjectType() Header_OBJECT_TYPE {
	if x != nil {
		return x.ObjectType
	}
	return Header_ONU
}

func (x *Header) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MsgBody:
	//	*Body_Request
	//	*Body_Response
	//	*Body_Notification
	MsgBody isBody_MsgBody `protobuf_oneof:"msg_body"`
}

func (x *Body) Reset() {
	*x = Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{2}
}

func (m *Body) GetMsgBody() isBody_MsgBody {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

func (x *Body) GetRequest() *Request {
	if x, ok := x.GetMsgBody().(*Body_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Body) GetResponse() *Response {
	if x, ok := x.GetMsgBody().(*Body_Response); ok {
		return x.Response
	}
	return nil
}

func (x *Body) GetNotification() *Notification {
	if x, ok := x.GetMsgBody().(*Body_Notification); ok {
		return x.Notification
	}
	return nil
}

type isBody_MsgBody interface {
	isBody_MsgBody()
}

type Body_Request struct {
	Request *Request `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type Body_Response struct {
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type Body_Notification struct {
	Notification *Notification `protobuf:"bytes,3,opt,name=notification,proto3,oneof"`
}

func (*Body_Request) isBody_MsgBody() {}

func (*Body_Response) isBody_MsgBody() {}

func (*Body_Notification) isBody_MsgBody() {}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ReqType:
	//	*Request_Hello
	//	*Request_GetData
	//	*Request_ReplaceConfig
	//	*Request_UpdateConfig
	//	*Request_Rpc
	//	*Request_Action
	ReqType isRequest_ReqType `protobuf_oneof:"req_type"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{3}
}

func (m *Request) GetReqType() isRequest_ReqType {
	if m != nil {
		return m.ReqType
	}
	return nil
}

func (x *Request) GetHello() *Hello {
	if x, ok := x.GetReqType().(*Request_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *Request) GetGetData() *GetData {
	if x, ok := x.GetReqType().(*Request_GetData); ok {
		return x.GetData
	}
	return nil
}

func (x *Request) GetReplaceConfig() *ReplaceConfig {
	if x, ok := x.GetReqType().(*Request_ReplaceConfig); ok {
		return x.ReplaceConfig
	}
	return nil
}

func (x *Request) GetUpdateConfig() *UpdateConfig {
	if x, ok := x.GetReqType().(*Request_UpdateConfig); ok {
		return x.UpdateConfig
	}
	return nil
}

func (x *Request) GetRpc() *RPC {
	if x, ok := x.GetReqType().(*Request_Rpc); ok {
		return x.Rpc
	}
	return nil
}

func (x *Request) GetAction() *Action {
	if x, ok := x.GetReqType().(*Request_Action); ok {
		return x.Action
	}
	return nil
}

type isRequest_ReqType interface {
	isRequest_ReqType()
}

type Request_Hello struct {
	Hello *Hello `protobuf:"bytes,2,opt,name=hello,proto3,oneof"`
}

type Request_GetData struct {
	GetData *GetData `protobuf:"bytes,3,opt,name=get_data,json=getData,proto3,oneof"`
}

type Request_ReplaceConfig struct {
	ReplaceConfig *ReplaceConfig `protobuf:"bytes,4,opt,name=replace_config,json=replaceConfig,proto3,oneof"`
}

type Request_UpdateConfig struct {
	UpdateConfig *UpdateConfig `protobuf:"bytes,5,opt,name=update_config,json=updateConfig,proto3,oneof"`
}

type Request_Rpc struct {
	Rpc *RPC `protobuf:"bytes,6,opt,name=rpc,proto3,oneof"`
}

type Request_Action struct {
	Action *Action `protobuf:"bytes,7,opt,name=action,proto3,oneof"`
}

func (*Request_Hello) isRequest_ReqType() {}

func (*Request_GetData) isRequest_ReqType() {}

func (*Request_ReplaceConfig) isRequest_ReqType() {}

func (*Request_UpdateConfig) isRequest_ReqType() {}

func (*Request_Rpc) isRequest_ReqType() {}

func (*Request_Action) isRequest_ReqType() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RespType:
	//	*Response_HelloResp
	//	*Response_GetResp
	//	*Response_ReplaceConfigResp
	//	*Response_UpdateConfigResp
	//	*Response_RpcResp
	//	*Response_ActionResp
	RespType isResponse_RespType `protobuf_oneof:"resp_type"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{4}
}

func (m *Response) GetRespType() isResponse_RespType {
	if m != nil {
		return m.RespType
	}
	return nil
}

func (x *Response) GetHelloResp() *HelloResp {
	if x, ok := x.GetRespType().(*Response_HelloResp); ok {
		return x.HelloResp
	}
	return nil
}

func (x *Response) GetGetResp() *GetDataResp {
	if x, ok := x.GetRespType().(*Response_GetResp); ok {
		return x.GetResp
	}
	return nil
}

func (x *Response) GetReplaceConfigResp() *ReplaceConfigResp {
	if x, ok := x.GetRespType().(*Response_ReplaceConfigResp); ok {
		return x.ReplaceConfigResp
	}
	return nil
}

func (x *Response) GetUpdateConfigResp() *UpdateConfigResp {
	if x, ok := x.GetRespType().(*Response_UpdateConfigResp); ok {
		return x.UpdateConfigResp
	}
	return nil
}

func (x *Response) GetRpcResp() *RPCResp {
	if x, ok := x.GetRespType().(*Response_RpcResp); ok {
		return x.RpcResp
	}
	return nil
}

func (x *Response) GetActionResp() *ActionResp {
	if x, ok := x.GetRespType().(*Response_ActionResp); ok {
		return x.ActionResp
	}
	return nil
}

type isResponse_RespType interface {
	isResponse_RespType()
}

type Response_HelloResp struct {
	HelloResp *HelloResp `protobuf:"bytes,3,opt,name=hello_resp,json=helloResp,proto3,oneof"`
}

type Response_GetResp struct {
	GetResp *GetDataResp `protobuf:"bytes,4,opt,name=get_resp,json=getResp,proto3,oneof"`
}

type Response_ReplaceConfigResp struct {
	ReplaceConfigResp *ReplaceConfigResp `protobuf:"bytes,5,opt,name=replace_config_resp,json=replaceConfigResp,proto3,oneof"`
}

type Response_UpdateConfigResp struct {
	UpdateConfigResp *UpdateConfigResp `protobuf:"bytes,6,opt,name=update_config_resp,json=updateConfigResp,proto3,oneof"`
}

type Response_RpcResp struct {
	RpcResp *RPCResp `protobuf:"bytes,7,opt,name=rpc_resp,json=rpcResp,proto3,oneof"`
}

type Response_ActionResp struct {
	ActionResp *ActionResp `protobuf:"bytes,8,opt,name=action_resp,json=actionResp,proto3,oneof"`
}

func (*Response_HelloResp) isResponse_RespType() {}

func (*Response_GetResp) isResponse_RespType() {}

func (*Response_ReplaceConfigResp) isResponse_RespType() {}

func (*Response_UpdateConfigResp) isResponse_RespType() {}

func (*Response_RpcResp) isResponse_RespType() {}

func (*Response_ActionResp) isResponse_RespType() {}

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceEndpointName string `protobuf:"bytes,1,opt,name=service_endpoint_name,json=serviceEndpointName,proto3" json:"service_endpoint_name,omitempty"` //The service endpoint the client
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{5}
}

func (x *Hello) GetServiceEndpointName() string {
	if x != nil {
		return x.ServiceEndpointName
	}
	return ""
}

type NFInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NfTypes map[string]string `protobuf:"bytes,1,rep,name=nf_types,json=nfTypes,proto3" json:"nf_types,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //Valid Key types:
	// usage-category, vendor-name,
	// software-version
	Capabilities []NFInformation_NFCapability `protobuf:"varint,2,rep,packed,name=capabilities,proto3,enum=tr451_vomci_nbi_message.v1.NFInformation_NFCapability" json:"capabilities,omitempty"`
}

func (x *NFInformation) Reset() {
	*x = NFInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFInformation) ProtoMessage() {}

func (x *NFInformation) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFInformation.ProtoReflect.Descriptor instead.
func (*NFInformation) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{6}
}

func (x *NFInformation) GetNfTypes() map[string]string {
	if x != nil {
		return x.NfTypes
	}
	return nil
}

func (x *NFInformation) GetCapabilities() []NFInformation_NFCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type HelloResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceEndpointName string `protobuf:"bytes,1,opt,name=service_endpoint_name,json=serviceEndpointName,proto3" json:"service_endpoint_name,omitempty"` //The service endpoint the server
	//used to listen on the session
	NetworkFunctionInfo []*NFInformation `protobuf:"bytes,2,rep,name=network_function_info,json=networkFunctionInfo,proto3" json:"network_function_info,omitempty"`
}

func (x *HelloResp) Reset() {
	*x = HelloResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResp) ProtoMessage() {}

func (x *HelloResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResp.ProtoReflect.Descriptor instead.
func (*HelloResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{7}
}

func (x *HelloResp) GetServiceEndpointName() string {
	if x != nil {
		return x.ServiceEndpointName
	}
	return ""
}

func (x *HelloResp) GetNetworkFunctionInfo() []*NFInformation {
	if x != nil {
		return x.NetworkFunctionInfo
	}
	return nil
}

type GetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter [][]byte `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetData) Reset() {
	*x = GetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetData) ProtoMessage() {}

func (x *GetData) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetData.ProtoReflect.Descriptor instead.
func (*GetData) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{8}
}

func (x *GetData) GetFilter() [][]byte {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusResp   *Status `protobuf:"bytes,1,opt,name=status_resp,json=statusResp,proto3" json:"status_resp,omitempty"`
	Data         []byte  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	DatastoreTag string  `protobuf:"bytes,3,opt,name=datastore_tag,json=datastoreTag,proto3" json:"datastore_tag,omitempty"` // Optional: Datastore tag used to
}

func (x *GetDataResp) Reset() {
	*x = GetDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResp) ProtoMessage() {}

func (x *GetDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResp.ProtoReflect.Descriptor instead.
func (*GetDataResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{9}
}

func (x *GetDataResp) GetStatusResp() *Status {
	if x != nil {
		return x.StatusResp
	}
	return nil
}

func (x *GetDataResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDataResp) GetDatastoreTag() string {
	if x != nil {
		return x.DatastoreTag
	}
	return ""
}

type ReplaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigInst []byte `protobuf:"bytes,1,opt,name=config_inst,json=configInst,proto3" json:"config_inst,omitempty"` // Full configuration instance to
	// be used as a replacement of what
	// exists for the target
	DatastoreTag string `protobuf:"bytes,2,opt,name=datastore_tag,json=datastoreTag,proto3" json:"datastore_tag,omitempty"` // Optional: Datastore tag used to
}

func (x *ReplaceConfig) Reset() {
	*x = ReplaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceConfig) ProtoMessage() {}

func (x *ReplaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceConfig.ProtoReflect.Descriptor instead.
func (*ReplaceConfig) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{10}
}

func (x *ReplaceConfig) GetConfigInst() []byte {
	if x != nil {
		return x.ConfigInst
	}
	return nil
}

func (x *ReplaceConfig) GetDatastoreTag() string {
	if x != nil {
		return x.DatastoreTag
	}
	return ""
}

type ReplaceConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusResp *Status `protobuf:"bytes,1,opt,name=status_resp,json=statusResp,proto3" json:"status_resp,omitempty"`
}

func (x *ReplaceConfigResp) Reset() {
	*x = ReplaceConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceConfigResp) ProtoMessage() {}

func (x *ReplaceConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceConfigResp.ProtoReflect.Descriptor instead.
func (*ReplaceConfigResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{11}
}

func (x *ReplaceConfigResp) GetStatusResp() *Status {
	if x != nil {
		return x.StatusResp
	}
	return nil
}

type UpdateConfigReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaConfig []byte `protobuf:"bytes,1,opt,name=delta_config,json=deltaConfig,proto3" json:"delta_config,omitempty"` // List of Node changes with the
}

func (x *UpdateConfigReplica) Reset() {
	*x = UpdateConfigReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigReplica) ProtoMessage() {}

func (x *UpdateConfigReplica) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigReplica.ProtoReflect.Descriptor instead.
func (*UpdateConfigReplica) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateConfigReplica) GetDeltaConfig() []byte {
	if x != nil {
		return x.DeltaConfig
	}
	return nil
}

type UpdateConfigInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentConfigInst []byte `protobuf:"bytes,1,opt,name=current_config_inst,json=currentConfigInst,proto3" json:"current_config_inst,omitempty"` // Full current configuration
	// instance
	DeltaConfig []byte `protobuf:"bytes,2,opt,name=delta_config,json=deltaConfig,proto3" json:"delta_config,omitempty"` // List of Node changes with the
}

func (x *UpdateConfigInstance) Reset() {
	*x = UpdateConfigInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigInstance) ProtoMessage() {}

func (x *UpdateConfigInstance) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigInstance.ProtoReflect.Descriptor instead.
func (*UpdateConfigInstance) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateConfigInstance) GetCurrentConfigInst() []byte {
	if x != nil {
		return x.CurrentConfigInst
	}
	return nil
}

func (x *UpdateConfigInstance) GetDeltaConfig() []byte {
	if x != nil {
		return x.DeltaConfig
	}
	return nil
}

type UpdateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ReqType:
	//	*UpdateConfig_UpdateConfigInst
	//	*UpdateConfig_UpdateConfigReplica
	ReqType      isUpdateConfig_ReqType `protobuf_oneof:"req_type"`
	DatastoreTag string                 `protobuf:"bytes,3,opt,name=datastore_tag,json=datastoreTag,proto3" json:"datastore_tag,omitempty"` // Optional: Datastore tag used to
}

func (x *UpdateConfig) Reset() {
	*x = UpdateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfig) ProtoMessage() {}

func (x *UpdateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfig.ProtoReflect.Descriptor instead.
func (*UpdateConfig) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{14}
}

func (m *UpdateConfig) GetReqType() isUpdateConfig_ReqType {
	if m != nil {
		return m.ReqType
	}
	return nil
}

func (x *UpdateConfig) GetUpdateConfigInst() *UpdateConfigInstance {
	if x, ok := x.GetReqType().(*UpdateConfig_UpdateConfigInst); ok {
		return x.UpdateConfigInst
	}
	return nil
}

func (x *UpdateConfig) GetUpdateConfigReplica() *UpdateConfigReplica {
	if x, ok := x.GetReqType().(*UpdateConfig_UpdateConfigReplica); ok {
		return x.UpdateConfigReplica
	}
	return nil
}

func (x *UpdateConfig) GetDatastoreTag() string {
	if x != nil {
		return x.DatastoreTag
	}
	return ""
}

type isUpdateConfig_ReqType interface {
	isUpdateConfig_ReqType()
}

type UpdateConfig_UpdateConfigInst struct {
	UpdateConfigInst *UpdateConfigInstance `protobuf:"bytes,1,opt,name=update_config_inst,json=updateConfigInst,proto3,oneof"`
}

type UpdateConfig_UpdateConfigReplica struct {
	UpdateConfigReplica *UpdateConfigReplica `protobuf:"bytes,2,opt,name=update_config_replica,json=updateConfigReplica,proto3,oneof"`
}

func (*UpdateConfig_UpdateConfigInst) isUpdateConfig_ReqType() {}

func (*UpdateConfig_UpdateConfigReplica) isUpdateConfig_ReqType() {}

type UpdateConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusResp *Status `protobuf:"bytes,1,opt,name=status_resp,json=statusResp,proto3" json:"status_resp,omitempty"`
}

func (x *UpdateConfigResp) Reset() {
	*x = UpdateConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigResp) ProtoMessage() {}

func (x *UpdateConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigResp.ProtoReflect.Descriptor instead.
func (*UpdateConfigResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateConfigResp) GetStatusResp() *Status {
	if x != nil {
		return x.StatusResp
	}
	return nil
}

type RPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputData    []byte `protobuf:"bytes,1,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	DatastoreTag string `protobuf:"bytes,2,opt,name=datastore_tag,json=datastoreTag,proto3" json:"datastore_tag,omitempty"` // Optional: Datastore tag used to
}

func (x *RPC) Reset() {
	*x = RPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC) ProtoMessage() {}

func (x *RPC) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC.ProtoReflect.Descriptor instead.
func (*RPC) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{16}
}

func (x *RPC) GetInputData() []byte {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *RPC) GetDatastoreTag() string {
	if x != nil {
		return x.DatastoreTag
	}
	return ""
}

type RPCResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusResp *Status `protobuf:"bytes,1,opt,name=status_resp,json=statusResp,proto3" json:"status_resp,omitempty"`
	OutputData []byte  `protobuf:"bytes,2,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
}

func (x *RPCResp) Reset() {
	*x = RPCResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCResp) ProtoMessage() {}

func (x *RPCResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCResp.ProtoReflect.Descriptor instead.
func (*RPCResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{17}
}

func (x *RPCResp) GetStatusResp() *Status {
	if x != nil {
		return x.StatusResp
	}
	return nil
}

func (x *RPCResp) GetOutputData() []byte {
	if x != nil {
		return x.OutputData
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputData    []byte `protobuf:"bytes,1,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	DatastoreTag string `protobuf:"bytes,2,opt,name=datastore_tag,json=datastoreTag,proto3" json:"datastore_tag,omitempty"` // Optional: Datastore tag used to
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{18}
}

func (x *Action) GetInputData() []byte {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *Action) GetDatastoreTag() string {
	if x != nil {
		return x.DatastoreTag
	}
	return ""
}

type ActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusResp *Status `protobuf:"bytes,1,opt,name=status_resp,json=statusResp,proto3" json:"status_resp,omitempty"`
	OutputData []byte  `protobuf:"bytes,2,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
}

func (x *ActionResp) Reset() {
	*x = ActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResp) ProtoMessage() {}

func (x *ActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResp.ProtoReflect.Descriptor instead.
func (*ActionResp) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{19}
}

func (x *ActionResp) GetStatusResp() *Status {
	if x != nil {
		return x.StatusResp
	}
	return nil
}

func (x *ActionResp) GetOutputData() []byte {
	if x != nil {
		return x.OutputData
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTimestamp string `protobuf:"bytes,1,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	Data           []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{20}
}

func (x *Notification) GetEventTimestamp() string {
	if x != nil {
		return x.EventTimestamp
	}
	return ""
}

func (x *Notification) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType string `protobuf:"bytes,1,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"` // Error type defined in RFC 6241
	// Appendix B
	ErrorTag string `protobuf:"bytes,2,opt,name=error_tag,json=errorTag,proto3" json:"error_tag,omitempty"` // Error tag defined in RFC 6241
	// Appendix B
	ErrorSeverity string `protobuf:"bytes,3,opt,name=error_severity,json=errorSeverity,proto3" json:"error_severity,omitempty"` // Error severity defined in RFC 6241
	// Appendix B
	ErrorAppTag string `protobuf:"bytes,4,opt,name=error_app_tag,json=errorAppTag,proto3" json:"error_app_tag,omitempty"` // Error app tag defined in RFC 6241
	// Appendix B
	ErrorPath string `protobuf:"bytes,5,opt,name=error_path,json=errorPath,proto3" json:"error_path,omitempty"` // Error path defined in RFC 6241
	// Appendix B
	ErrorMessage string `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message defined in RFC 6241
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{21}
}

func (x *Error) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *Error) GetErrorTag() string {
	if x != nil {
		return x.ErrorTag
	}
	return ""
}

func (x *Error) GetErrorSeverity() string {
	if x != nil {
		return x.ErrorSeverity
	}
	return ""
}

func (x *Error) GetErrorAppTag() string {
	if x != nil {
		return x.ErrorAppTag
	}
	return ""
}

func (x *Error) GetErrorPath() string {
	if x != nil {
		return x.ErrorPath
	}
	return ""
}

func (x *Error) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode Status_StatusCode `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=tr451_vomci_nbi_message.v1.Status_StatusCode" json:"status_code,omitempty"`
	Error      []*Error          `protobuf:"bytes,2,rep,name=error,proto3" json:"error,omitempty"` //Optional: Error information
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tr451_vomci_nbi_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_tr451_vomci_nbi_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_tr451_vomci_nbi_message_proto_rawDescGZIP(), []int{22}
}

func (x *Status) GetStatusCode() Status_StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return Status_OK
}

func (x *Status) GetError() []*Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_tr451_vomci_nbi_message_proto protoreflect.FileDescriptor

var file_tr451_vomci_nbi_message_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62,
	0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1a, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x77, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x3a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69,
	0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74,
	0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0xbb, 0x02, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63,
	0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x60, 0x0a, 0x0b, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x55, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x4f, 0x4d, 0x43,
	0x49, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x56, 0x4f, 0x4d, 0x43, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x56, 0x4f, 0x4c, 0x54, 0x4d, 0x46, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x4d,
	0x43, 0x49, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x04, 0x22, 0xe7, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76,
	0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xaa, 0x03, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f,
	0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x40, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f,
	0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x0d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e,
	0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x70,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f,
	0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x50, 0x43, 0x48, 0x00, 0x52, 0x03, 0x72, 0x70, 0x63, 0x12,
	0x3c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62,
	0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf1, 0x03, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x34,
	0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e,
	0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f,
	0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f,
	0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f,
	0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x72, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x34,
	0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a,
	0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x0d, 0x4e,
	0x46, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x08,
	0x6e, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x46, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x66, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x5a, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f,
	0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4e, 0x46, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4e,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x0c, 0x4e, 0x46, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x5f, 0x43, 0x41,
	0x50, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x4e, 0x55, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x4f, 0x4e, 0x55, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x52, 0x45,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x22,
	0x9e, 0x01, 0x0a, 0x09, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5d, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e,
	0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x46,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x21, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31,
	0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x61,
	0x67, 0x22, 0x55, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x67, 0x22, 0x58, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69,
	0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x38, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x69, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x88, 0x02, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d,
	0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x15, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x72, 0x34, 0x35,
	0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x61, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x57, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72,
	0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x03, 0x52,
	0x50, 0x43, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x61, 0x67, 0x22, 0x6f, 0x0a, 0x07, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76,
	0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x54, 0x61, 0x67, 0x22, 0x72, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31,
	0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x0c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x41, 0x70, 0x70, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x74, 0x72,
	0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f, 0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x34, 0x35, 0x31, 0x5f, 0x76, 0x6f,
	0x6d, 0x63, 0x69, 0x5f, 0x6e, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x27, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x01, 0x42, 0x46, 0x0a, 0x31, 0x6f, 0x72, 0x67, 0x2e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x2e,
	0x6f, 0x62, 0x62, 0x61, 0x61, 0x2e, 0x6f, 0x6e, 0x75, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x67, 0x70, 0x62, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x01, 0x5a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x72, 0x34, 0x35, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tr451_vomci_nbi_message_proto_rawDescOnce sync.Once
	file_tr451_vomci_nbi_message_proto_rawDescData = file_tr451_vomci_nbi_message_proto_rawDesc
)

func file_tr451_vomci_nbi_message_proto_rawDescGZIP() []byte {
	file_tr451_vomci_nbi_message_proto_rawDescOnce.Do(func() {
		file_tr451_vomci_nbi_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_tr451_vomci_nbi_message_proto_rawDescData)
	})
	return file_tr451_vomci_nbi_message_proto_rawDescData
}

var file_tr451_vomci_nbi_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tr451_vomci_nbi_message_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_tr451_vomci_nbi_message_proto_goTypes = []interface{}{
	(Header_OBJECT_TYPE)(0),         // 0: tr451_vomci_nbi_message.v1.Header.OBJECT_TYPE
	(NFInformation_NFCapability)(0), // 1: tr451_vomci_nbi_message.v1.NFInformation.NFCapability
	(Status_StatusCode)(0),          // 2: tr451_vomci_nbi_message.v1.Status.StatusCode
	(*Msg)(nil),                     // 3: tr451_vomci_nbi_message.v1.Msg
	(*Header)(nil),                  // 4: tr451_vomci_nbi_message.v1.Header
	(*Body)(nil),                    // 5: tr451_vomci_nbi_message.v1.Body
	(*Request)(nil),                 // 6: tr451_vomci_nbi_message.v1.Request
	(*Response)(nil),                // 7: tr451_vomci_nbi_message.v1.Response
	(*Hello)(nil),                   // 8: tr451_vomci_nbi_message.v1.Hello
	(*NFInformation)(nil),           // 9: tr451_vomci_nbi_message.v1.NFInformation
	(*HelloResp)(nil),               // 10: tr451_vomci_nbi_message.v1.HelloResp
	(*GetData)(nil),                 // 11: tr451_vomci_nbi_message.v1.GetData
	(*GetDataResp)(nil),             // 12: tr451_vomci_nbi_message.v1.GetDataResp
	(*ReplaceConfig)(nil),           // 13: tr451_vomci_nbi_message.v1.ReplaceConfig
	(*ReplaceConfigResp)(nil),       // 14: tr451_vomci_nbi_message.v1.ReplaceConfigResp
	(*UpdateConfigReplica)(nil),     // 15: tr451_vomci_nbi_message.v1.UpdateConfigReplica
	(*UpdateConfigInstance)(nil),    // 16: tr451_vomci_nbi_message.v1.UpdateConfigInstance
	(*UpdateConfig)(nil),            // 17: tr451_vomci_nbi_message.v1.UpdateConfig
	(*UpdateConfigResp)(nil),        // 18: tr451_vomci_nbi_message.v1.UpdateConfigResp
	(*RPC)(nil),                     // 19: tr451_vomci_nbi_message.v1.RPC
	(*RPCResp)(nil),                 // 20: tr451_vomci_nbi_message.v1.RPCResp
	(*Action)(nil),                  // 21: tr451_vomci_nbi_message.v1.Action
	(*ActionResp)(nil),              // 22: tr451_vomci_nbi_message.v1.ActionResp
	(*Notification)(nil),            // 23: tr451_vomci_nbi_message.v1.Notification
	(*Error)(nil),                   // 24: tr451_vomci_nbi_message.v1.Error
	(*Status)(nil),                  // 25: tr451_vomci_nbi_message.v1.Status
	nil,                             // 26: tr451_vomci_nbi_message.v1.NFInformation.NfTypesEntry
}
var file_tr451_vomci_nbi_message_proto_depIdxs = []int32{
	4,  // 0: tr451_vomci_nbi_message.v1.Msg.header:type_name -> tr451_vomci_nbi_message.v1.Header
	5,  // 1: tr451_vomci_nbi_message.v1.Msg.body:type_name -> tr451_vomci_nbi_message.v1.Body
	0,  // 2: tr451_vomci_nbi_message.v1.Header.object_type:type_name -> tr451_vomci_nbi_message.v1.Header.OBJECT_TYPE
	6,  // 3: tr451_vomci_nbi_message.v1.Body.request:type_name -> tr451_vomci_nbi_message.v1.Request
	7,  // 4: tr451_vomci_nbi_message.v1.Body.response:type_name -> tr451_vomci_nbi_message.v1.Response
	23, // 5: tr451_vomci_nbi_message.v1.Body.notification:type_name -> tr451_vomci_nbi_message.v1.Notification
	8,  // 6: tr451_vomci_nbi_message.v1.Request.hello:type_name -> tr451_vomci_nbi_message.v1.Hello
	11, // 7: tr451_vomci_nbi_message.v1.Request.get_data:type_name -> tr451_vomci_nbi_message.v1.GetData
	13, // 8: tr451_vomci_nbi_message.v1.Request.replace_config:type_name -> tr451_vomci_nbi_message.v1.ReplaceConfig
	17, // 9: tr451_vomci_nbi_message.v1.Request.update_config:type_name -> tr451_vomci_nbi_message.v1.UpdateConfig
	19, // 10: tr451_vomci_nbi_message.v1.Request.rpc:type_name -> tr451_vomci_nbi_message.v1.RPC
	21, // 11: tr451_vomci_nbi_message.v1.Request.action:type_name -> tr451_vomci_nbi_message.v1.Action
	10, // 12: tr451_vomci_nbi_message.v1.Response.hello_resp:type_name -> tr451_vomci_nbi_message.v1.HelloResp
	12, // 13: tr451_vomci_nbi_message.v1.Response.get_resp:type_name -> tr451_vomci_nbi_message.v1.GetDataResp
	14, // 14: tr451_vomci_nbi_message.v1.Response.replace_config_resp:type_name -> tr451_vomci_nbi_message.v1.ReplaceConfigResp
	18, // 15: tr451_vomci_nbi_message.v1.Response.update_config_resp:type_name -> tr451_vomci_nbi_message.v1.UpdateConfigResp
	20, // 16: tr451_vomci_nbi_message.v1.Response.rpc_resp:type_name -> tr451_vomci_nbi_message.v1.RPCResp
	22, // 17: tr451_vomci_nbi_message.v1.Response.action_resp:type_name -> tr451_vomci_nbi_message.v1.ActionResp
	26, // 18: tr451_vomci_nbi_message.v1.NFInformation.nf_types:type_name -> tr451_vomci_nbi_message.v1.NFInformation.NfTypesEntry
	1,  // 19: tr451_vomci_nbi_message.v1.NFInformation.capabilities:type_name -> tr451_vomci_nbi_message.v1.NFInformation.NFCapability
	9,  // 20: tr451_vomci_nbi_message.v1.HelloResp.network_function_info:type_name -> tr451_vomci_nbi_message.v1.NFInformation
	25, // 21: tr451_vomci_nbi_message.v1.GetDataResp.status_resp:type_name -> tr451_vomci_nbi_message.v1.Status
	25, // 22: tr451_vomci_nbi_message.v1.ReplaceConfigResp.status_resp:type_name -> tr451_vomci_nbi_message.v1.Status
	16, // 23: tr451_vomci_nbi_message.v1.UpdateConfig.update_config_inst:type_name -> tr451_vomci_nbi_message.v1.UpdateConfigInstance
	15, // 24: tr451_vomci_nbi_message.v1.UpdateConfig.update_config_replica:type_name -> tr451_vomci_nbi_message.v1.UpdateConfigReplica
	25, // 25: tr451_vomci_nbi_message.v1.UpdateConfigResp.status_resp:type_name -> tr451_vomci_nbi_message.v1.Status
	25, // 26: tr451_vomci_nbi_message.v1.RPCResp.status_resp:type_name -> tr451_vomci_nbi_message.v1.Status
	25, // 27: tr451_vomci_nbi_message.v1.ActionResp.status_resp:type_name -> tr451_vomci_nbi_message.v1.Status
	2,  // 28: tr451_vomci_nbi_message.v1.Status.status_code:type_name -> tr451_vomci_nbi_message.v1.Status.StatusCode
	24, // 29: tr451_vomci_nbi_message.v1.Status.error:type_name -> tr451_vomci_nbi_message.v1.Error
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_tr451_vomci_nbi_message_proto_init() }
func file_tr451_vomci_nbi_message_proto_init() {
	if File_tr451_vomci_nbi_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tr451_vomci_nbi_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tr451_vomci_nbi_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tr451_vomci_nbi_message_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Body_Request)(nil),
		(*Body_Response)(nil),
		(*Body_Notification)(nil),
	}
	file_tr451_vomci_nbi_message_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Request_Hello)(nil),
		(*Request_GetData)(nil),
		(*Request_ReplaceConfig)(nil),
		(*Request_UpdateConfig)(nil),
		(*Request_Rpc)(nil),
		(*Request_Action)(nil),
	}
	file_tr451_vomci_nbi_message_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Response_HelloResp)(nil),
		(*Response_GetResp)(nil),
		(*Response_ReplaceConfigResp)(nil),
		(*Response_UpdateConfigResp)(nil),
		(*Response_RpcResp)(nil),
		(*Response_ActionResp)(nil),
	}
	file_tr451_vomci_nbi_message_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*UpdateConfig_UpdateConfigInst)(nil),
		(*UpdateConfig_UpdateConfigReplica)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tr451_vomci_nbi_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tr451_vomci_nbi_message_proto_goTypes,
		DependencyIndexes: file_tr451_vomci_nbi_message_proto_depIdxs,
		EnumInfos:         file_tr451_vomci_nbi_message_proto_enumTypes,
		MessageInfos:      file_tr451_vomci_nbi_message_proto_msgTypes,
	}.Build()
	File_tr451_vomci_nbi_message_proto = out.File
	file_tr451_vomci_nbi_message_proto_rawDesc = nil
	file_tr451_vomci_nbi_message_proto_goTypes = nil
	file_tr451_vomci_nbi_message_proto_depIdxs = nil
}
