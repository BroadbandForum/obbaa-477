version: '3.4'

# DO NOT CHANGE IP ADDRESSES, as they are used by containers' apps

networks:
  kafka_network:
    driver: bridge
    name: kafka_network
    ipam:
      config:
        - subnet: "172.16.1.0/24"
    driver_opts:
      com.docker.network.bridge.name: kafka_network

  mongo_network:
    driver: bridge
    name: mongo_network
    ipam:
      config:
        - subnet: "172.40.1.0/24"
    driver_opts:
      com.docker.network.bridge.name: mongo_network

  client_olt:
    driver: bridge
    name: client_olt
    ipam:
      config:
        - subnet: "172.20.1.0/24"
    driver_opts:
      com.docker.network.bridge.name: client_olt

  crelay_network:
    driver: bridge
    name: crelay_network
    ipam:
      config:
        - subnet: "172.21.0.0/24"
    driver_opts:
      com.docker.network.bridge.name: crelay_network

  vnf_olt:
    driver: bridge
    name: vnf_olt
    ipam:
      config:
        - subnet: "172.20.2.0/24"
    driver_opts:
      com.docker.network.bridge.name: vnf_olt

  server_olt:
    driver: bridge
    name: server_olt
    ipam:
      config:
        - subnet: "172.20.3.0/24"
    driver_opts:
      com.docker.network.bridge.name: server_olt

services:
  client:
    image: pppoe_client:latest
    container_name: pppoe_client
    privileged: true
    build:
      context: ./pppoe_client
      dockerfile: ./Dockerfile
    networks:
      client_olt:
        ipv4_address: "172.20.1.2"
    depends_on:
      - olt 
    command: ./client.sh

  pppoe_relay_vnf:
    image: pppoe-relay-vnf:latest
    container_name: pppoe-relay-vnf
    ports: 
      - "50051:50051"
    build: 
      context: ..
      dockerfile: ./pppoe-relay-vnf/vnf.Dockerfile
    networks:
      crelay_network:
        ipv4_address: "172.21.0.2"
      kafka_network:
        ipv4_address: "172.16.1.4"
      mongo_network:
        ipv4_address: "172.40.1.2"
    environment:
      - VNF_NAME=pppoe_relay_vnf
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - VNF_MODE=client
      - DB_NAME=pppoe_relay_vnf
      - SOCKET_GRPC=172.21.0.3:50055
      - DISCARD_ON_ERROR=true
    depends_on:
      - kafka
    command: ./vnf

  control_relay:
    image: broadbandforum/obbaa-control-relay:develop
    container_name: control_relay
    restart: always
    ports:
      - "50052:50052"
      - "50055:50055"
    environment: 
      - CONTROL_RELAY_HELLO_NAME=control_relay_service
      - CONTROL_RELAY_HELLO_NBI_ENDPOINT_NAME=control_relay_service_nbi
      - CONTROL_RELAY_HELLO_SBI_ENDPOINT_NAME=control_relay_service_sbi
      - PLUGIN_PORT=50052
      - SDN_MC_SERVER_PORT=50053
      # - SDN_MC_SERVER_LIST=server_sdn_controller_1;server_sdn_controller_2;server_sdn_controller_3
      - CONTROL_RELAY_PORT=50055
      - OBBAA_ADDRESS=baa
      - OBBAA_PORT=9292
      - SSH_USER=admin
      - SSH_PASSWORD=password
      - SHARED_FOLDER=./plugin-repo
      - PRIVATE_FOLDER=./plugin-enabled
    networks: 
      crelay_network:
        ipv4_address: "172.21.0.3"
      vnf_olt:
        ipv4_address: "172.20.2.2"

  server:
    image: pppoe_server:latest
    container_name: pppoe_server
    privileged: true
    build:
      context: ./pppoe_server
      dockerfile: ./Dockerfile
    networks:
      server_olt:
        ipv4_address: "172.20.3.2"
    depends_on:
      - client
    command: ./server.sh 172.20.3.2 172.20.1.2

  olt:
    image: pppoe-olt-app:latest
    hostname: olt1
    container_name: olt
    build: 
      context: ..
      dockerfile: ./pppoe-relay-vnf/olt_app.Dockerfile
    networks: 
      client_olt: 
        ipv4_address: "172.20.1.3"
      vnf_olt:
        ipv4_address: "172.20.2.3"
      server_olt:
        ipv4_address: "172.20.3.3"
    depends_on:
      - pppoe_relay_vnf
      - control_relay
    environment:
      - RUN_IMMEDIATELY=true  # if true, app is run immediatly. if false, container will stall, so you can run the app manually anytime
      - CLIENT_ADDR=172.20.1.3
      - VNF_ADDR=172.20.2.2
      - VNF_PORT=50052
      - SERVER_ADDR=172.20.3.3
    command: ./olt_app.sh

  zookeeper:
      image: confluentinc/cp-zookeeper:5.5.0
      hostname: zookeeper
      container_name: zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        kafka_network:
          ipv4_address: "172.16.1.9"

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      kafka_network:
        ipv4_address: "172.16.1.6"

  kafka-gpb-tester:
    image: kafka-gpb-tester:latest
    container_name: kafka-gpb-tester
    build: 
      context: ../common/kafka-gpb-tester/
      dockerfile: ./Dockerfile
    networks:
      kafka_network:
        ipv4_address: "172.16.1.3"
    depends_on:
      - kafka
    
  mongo:
    image: mongo:6.0
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      mongo_network:
        ipv4_address: "172.40.1.3"
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: user
    #   MONGO_INITDB_ROOT_PASSWORD: pass

  baa:
    image: broadbandforum/baa:develop
    #image: baa_5.1.0_dolt:latest
    #image: broadbandforum/baa:R5.1.0
    hostname: baa
    #build: ./
    container_name: baa
    restart: always
    ports:
        - "8080:8080"
        - "5005:5005"
        - "9292:9292"
        - "4335:4335"
        - "162:162/udp"
    environment:
        #- EXTRA_JAVA_OPTS=-Xms128M -Xmx512M -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005
        - BAA_USER=admin
        - BAA_USER_PASSWORD=password
        #Possible Values for PMA_SESSION_FACTORY_TYPE are REGULAR,TRANSPARENT, Default value is REGULAR
        - PMA_SESSION_FACTORY_TYPE=REGULAR
        - MAXIMUM_ALLOWED_ADAPTER_VERSIONS=3
        - VOLTMF_NAME=vOLTMF
        # Below tag shall be set as false if the BAA is going to be tested for Scalability/Performance
        - NC_ENABLE_POST_EDIT_DS_VALIDATION_SUPPORT=True
        # Enable Model Abstracter or Disable Model Abstracter, Default value is Disable
        - MODEL_ABSTRACTER_STATUS=Disable
    volumes:
      - /baa/stores:/baa/stores
    networks:
      kafka_network:
        ipv4_address: "172.16.1.2"
      crelay_network:
        ipv4_address: "172.21.0.4"

    tty: true
    stdin_open: true
    depends_on:
      - kafka
      - zookeeper
    